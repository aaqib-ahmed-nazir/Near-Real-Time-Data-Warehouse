-- Dropping tables if they exist and creating new tables for the data warehouse
DROP TABLE IF EXISTS FACT_TRANSACTIONS;
DROP TABLE IF EXISTS PRODUCTS;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS SUPPLIERS;
DROP TABLE IF EXISTS STORES;
DROP TABLE IF EXISTS DIM_DATE;

-- Creating DIM_DATE dimension table
CREATE TABLE DIM_DATE (
    DATE_ID INT PRIMARY KEY,
    FULL_DATE DATE NOT NULL,
    DAY INT NOT NULL,
    WEEKDAY VARCHAR(10) NOT NULL,
    DAY_OF_WEEK INT NOT NULL,
    WEEK INT NOT NULL,
    MONTH INT NOT NULL,
    MONTH_NAME VARCHAR(20) NOT NULL,
    QUARTER INT NOT NULL,
    YEAR INT NOT NULL,
    IS_HOLIDAY TINYINT(1) NOT NULL,
    IS_WEEKEND TINYINT(1) NOT NULL,
    FISCAL_YEAR VARCHAR(9) NOT NULL,
    FISCAL_QUARTER INT NOT NULL
);

-- Creating CUSTOMERS dimension table
CREATE TABLE CUSTOMERS (
    CUSTOMER_ID INT PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(100) NOT NULL,
    GENDER CHAR(1) NOT NULL
);

-- Creating SUPPLIERS dimension table
CREATE TABLE SUPPLIERS (
    SUPPLIER_ID INT PRIMARY KEY,
    SUPPLIER_NAME VARCHAR(100) NOT NULL
);

-- Creating STORES dimension table
CREATE TABLE STORES (
    STORE_ID INT PRIMARY KEY,
    STORE_NAME VARCHAR(100) NOT NULL
);

-- Creating PRODUCTS dimension table with additional attributes
CREATE TABLE PRODUCTS (
    PRODUCT_ID INT PRIMARY KEY,
    PRODUCT_NAME VARCHAR(100) NOT NULL,
    PRODUCT_PRICE DECIMAL(10, 2) NOT NULL,
    SUPPLIER_ID INT NOT NULL,
    SUPPLIER_NAME VARCHAR(100) NOT NULL,
    STORE_ID INT NOT NULL,
    STORE_NAME VARCHAR(100) NOT NULL,
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID),
    FOREIGN KEY (STORE_ID) REFERENCES STORES(STORE_ID)
);

-- Creating FACT_TRANSACTIONS fact table with PRODUCT_PRICE included
CREATE TABLE FACT_TRANSACTIONS (
    ORDER_ID INT PRIMARY KEY,
    DATE_ID INT NOT NULL,
    PRODUCT_ID INT NOT NULL,
    CUSTOMER_ID INT NOT NULL,
    SUPPLIER_ID INT NOT NULL,
    STORE_ID INT NOT NULL,
    QUANTITY INT NOT NULL,
    PRODUCT_PRICE DECIMAL(10, 2) NOT NULL,
    SALE DECIMAL(18, 2) AS (QUANTITY * PRODUCT_PRICE) STORED,
    FOREIGN KEY (DATE_ID) REFERENCES DIM_DATE(DATE_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID),
    FOREIGN KEY (STORE_ID) REFERENCES STORES(STORE_ID)
);
