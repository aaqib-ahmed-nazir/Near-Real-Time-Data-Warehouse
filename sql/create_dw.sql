CREATE DATABASE IF NOT EXISTS dw;

USE dw;

-- Drop tables if they exist
DROP TABLE IF EXISTS FACT_TRANSACTIONS;
DROP TABLE IF EXISTS PRODUCTS;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS SUPPLIERS;
DROP TABLE IF EXISTS STORES;
DROP TABLE IF EXISTS DIM_DATE;
-- DROP TABLE IF EXISTS MERGED_DATA;

-- Dimension Tables:

-- Date Dimension Table
CREATE TABLE DIM_DATE (
    DATE_ID INT PRIMARY KEY,
    FULL_DATE DATE,
    DAY_OF_WEEK VARCHAR(10),
    DAY_OF_MONTH INT,
    MONTH INT,
    QUARTER INT,
    YEAR INT,
    IS_WEEKEND BOOLEAN,
    SEASON VARCHAR(10),
    HALF_YEAR INT -- 1 for H1, 2 for H2
);

-- Product Dimension Table
CREATE TABLE PRODUCTS (
    PRODUCT_ID INT PRIMARY KEY,
    PRODUCT_NAME VARCHAR(100),
    PRODUCT_PRICE DECIMAL(10, 2),
    SUPPLIER_ID INT
);

-- Supplier Dimension Table
CREATE TABLE SUPPLIERS (
    SUPPLIER_ID INT PRIMARY KEY,
    SUPPLIER_NAME VARCHAR(100)
);

-- Customer Dimension Table
CREATE TABLE CUSTOMERS (
    CUSTOMER_ID INT PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(100),
    GENDER VARCHAR(10)
);

-- Store Dimension Table
CREATE TABLE STORES (
    STORE_ID INT PRIMARY KEY,
    STORE_NAME VARCHAR(100)
);

-- Fact Table
CREATE TABLE FACT_TRANSACTIONS (
    TRANSACTION_ID INT AUTO_INCREMENT PRIMARY KEY,
    ORDER_ID INT,
    DATE_ID INT,
    PRODUCT_ID INT,
    CUSTOMER_ID INT,
    STORE_ID INT,
    QUANTITY INT,
    SALE_AMOUNT DECIMAL(18, 2),
    FOREIGN KEY (DATE_ID) REFERENCES DIM_DATE(DATE_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (STORE_ID) REFERENCES STORES(STORE_ID)
);

-- Create indexes for better query performance
CREATE INDEX idx_fact_date ON FACT_TRANSACTIONS(DATE_ID);
CREATE INDEX idx_fact_product ON FACT_TRANSACTIONS(PRODUCT_ID);
CREATE INDEX idx_fact_customer ON FACT_TRANSACTIONS(CUSTOMER_ID);
CREATE INDEX idx_fact_store ON FACT_TRANSACTIONS(STORE_ID);
CREATE INDEX idx_product_supplier ON PRODUCTS(SUPPLIER_ID);


-- -- Creating MERGED_DATA table with separate ORDER_DATE and ORDER_TIME
-- CREATE TABLE MERGED_DATA (
--     ORDER_ID INT PRIMARY KEY,
--     ORDER_DATE DATE NOT NULL,
--     ORDER_TIME TIME NOT NULL,
--     productID INT NOT NULL,
--     customerID INT NOT NULL,
--     QUANTITY INT NOT NULL,
--     TIME_ID INT NOT NULL,
--     productName VARCHAR(100) NOT NULL,
--     productPrice DECIMAL(10, 2) NOT NULL,
--     supplierID INT NOT NULL,
--     supplierName VARCHAR(100) NOT NULL,
--     storeID INT NOT NULL,
--     storeName VARCHAR(100) NOT NULL,
--     customer_name VARCHAR(100) NOT NULL,
--     gender VARCHAR(10) NOT NULL,
--     SALE DECIMAL(18, 2) AS (QUANTITY * productPrice) STORED
-- );